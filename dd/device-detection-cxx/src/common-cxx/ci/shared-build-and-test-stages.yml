parameters:
- name: windowsImage
- name: linuxImage
- name: macImage
- name: runTests
  type: string
  default: 'On'
- name: minGWGenerator
  type: string
  default: '-G "MinGW Makefiles"'
- name: platformToolsetVersion
- name: windowsSDKVersion

stages:

- stage: Windows
  dependsOn: []
  pool:
    vmImage: ${{ parameters.windowsImage }}
    demands:
    - msbuild
    - vstest

  jobs:
  - job: Build_And_Test_VisualStudio
    condition: ne(${{ parameters.runTests }}, 'Off')
    strategy:
      matrix:
        debug x86 multi threads:
          BuildConfiguration: Debug
          BuildPlatform: x86
          BuildDirectory: Debug
        release x86 multi threads:
          BuildConfiguration: Release 
          BuildPlatform: x86
          BuildDirectory: Release
        debug x64 multi threads:
          BuildConfiguration: Debug
          BuildPlatform: x64
          BuildDirectory: x64/Debug
        release x64 multi threads:
          BuildConfiguration: Release  
          BuildPlatform: x64  
          BuildDirectory: x64/Release
        debug x86 single thread:
          BuildConfiguration: Debug-Single
          BuildPlatform: x86
          BuildDirectory: Debug
        release x86 single thread:
          BuildConfiguration: Release-Single
          BuildPlatform: x86
          BuildDirectory: Release
        debug x64 single thread:
          BuildConfiguration: Debug-Single
          BuildPlatform: x64
          BuildDirectory: x64/Debug
        release x64 single thread:
          BuildConfiguration: Release-Single
          BuildPlatform: x64  
          BuildDirectory: x64/Release
    steps:
    - template: shared-steps-windows-test-vs.yml
      parameters:
        buildPlatform: '$(BuildPlatform)'
        buildConfiguration: '$(BuildConfiguration)'
        buildDirectory: '$(BuildDirectory)'

  - job: Build_And_Test_CMake
    condition: ne(${{ parameters.runTests }}, 'Off')
    strategy:
      matrix:
        debug x86 multi threads:
          BuildConfiguration: Debug
          BuildPlatform: Win32
          BuildArguments: -DNoThreading=OFF
        release x86 multi threads:
          BuildConfiguration: Release 
          BuildPlatform: Win32
          BuildArguments: -DNoThreading=OFF
        debug x64 multi threads:
          BuildConfiguration: Debug
          BuildPlatform: x64
          BuildArguments: -DNoThreading=OFF
        release x64 multi threads:
          BuildConfiguration: Release  
          BuildPlatform: x64
          BuildArguments: -DNoThreading=OFF
        debug x86 single thread:
          BuildConfiguration: Debug
          BuildPlatform: Win32
          BuildArguments: -DNoThreading=ON
        release x86 single thread:
          BuildConfiguration: Release 
          BuildPlatform: Win32
          BuildArguments: -DNoThreading=ON
        debug x64 single thread:
          BuildConfiguration: Debug
          BuildPlatform: x64
          BuildArguments: -DNoThreading=ON
        release x64 single thread:
          BuildConfiguration: Release  
          BuildPlatform: x64
          BuildArguments: -DNoThreading=ON
    steps:
    - template: shared-steps-windows-test-cmake.yml
      parameters:
        buildPlatform: '$(BuildPlatform)'
        buildConfiguration: '$(BuildConfiguration)'
        buildArguments: '$(BuildArguments)'
        platformToolsetVersion: '${{ parameters.platformToolsetVersion }}'
        windowsSDKVersion: '${{ parameters.windowsSDKVersion }}'

- stage: MacOS
  dependsOn: []
  jobs:
  - job: Build_And_Test_Mac
    condition: ne(${{ parameters.runTests }}, 'Off')
    pool:
      name: Azure Pipelines
      vmImage: ${{ parameters.macImage }}
    strategy:
      matrix:
        debug x64 multi threads:
          BuildConfiguration: Debug
          BuildArguments: -DNoThreading=OFF
        release x64 multi threads:
          BuildConfiguration: Release 
          BuildArguments: -DNoThreading=OFF
        debug x64 single thread:
          BuildConfiguration: Debug
          BuildArguments: -DNoThreading=ON
        release x64 single thread:
          BuildConfiguration: Release  
          BuildArguments: -DNoThreading=ON
    steps:
    - template: shared-steps-cmake-test.yml
      parameters:
        platformName: 'Mac'
        buildConfiguration: '$(BuildConfiguration)'
        buildArguments: '$(BuildArguments)'
        
- stage: Linux
  dependsOn: []
  jobs:
  - job: Build_And_Test_Ubuntu
    condition: ne(${{ parameters.runTests }}, 'Off')
    pool:
      vmImage: ${{ parameters.linuxImage }}
    strategy:
      matrix:
        debug x86 multi threads:
          BuildConfiguration: Debug
          BuildArguments: -D32bit=ON -DNoThreading=OFF
        release x86 multi threads:
          BuildConfiguration: Release 
          BuildArguments: -D32bit=ON -DNoThreading=OFF
        debug x64 multi threads:
          BuildConfiguration: Debug
          BuildArguments: -DNoThreading=OFF
        release x64 multi threads:
          BuildConfiguration: Release 
          BuildArguments: -DNoThreading=OFF
        debug x86 single thread:
          BuildConfiguration: Debug
          BuildArguments: -D32bit=ON -DNoThreading=ON
        release x86 single thread:
          BuildConfiguration: Release  
          BuildArguments: -D32bit=ON -DNoThreading=ON
        debug x64 single thread:
          BuildConfiguration: Debug
          BuildArguments: -DNoThreading=ON
        release x64 single thread:
          BuildConfiguration: Release  
          BuildArguments: -DNoThreading=ON
    steps:
    - script: |
        # Update package repositories
        sudo apt-get -y update
        
        # Install required packages
        sudo apt-get -y install \
          gcc-multilib \
          g++-multilib        
      displayName: 'Install Required Packages'
    
    - template: shared-steps-cmake-test.yml
      parameters:
        platformName: 'Ubuntu'  
        buildConfiguration: '$(BuildConfiguration)'
        buildArguments: '$(BuildArguments)'

- stage: MinGW
  dependsOn: []
  jobs:
  - job: Build_And_Test_MinGW
    condition: ne(${{ parameters.runTests }}, 'Off')
    pool:
      vmImage: ${{ parameters.windowsImage }}
    strategy:
      matrix:
        debug x64 multi threads:
          BuildConfiguration: Debug
          BuildArguments: ${{ parameters.minGWGenerator }} -DNoThreading=OFF
        release x64 multi threads:
          BuildConfiguration: Release 
          BuildArguments: ${{ parameters.minGWGenerator }} -DNoThreading=OFF
        debug x64 single thread:
          BuildConfiguration: Debug
          BuildArguments: ${{ parameters.minGWGenerator }} -DNoThreading=ON
        release x64 single thread:
          BuildConfiguration: Release  
          BuildArguments: ${{ parameters.minGWGenerator }} -DNoThreading=ON
    steps:
    - template: shared-steps-cmake-test.yml
      parameters:
        platformName: 'MinGW'  
        buildConfiguration: '$(BuildConfiguration)'
        buildArguments: '$(BuildArguments)'